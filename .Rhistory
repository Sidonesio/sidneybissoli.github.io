# Install pacman if not installed
if (!require("pacman")) install.packages("pacman")
# Install all packages needed for the analysis
pacman::p_load(
tidyverse,
GetDFPData2,
janitor,
here,
scales,
ggthemes,
plotly,
DT
)
# Install pacman if not installed
if (!require("pacman")) install.packages("pacman")
# Install all packages needed for the analysis
pacman::p_load(
tidyverse,
GetDFPData2,
janitor,
here,
scales,
ggthemes,
plotly,
DT
)
?datatable
library(crosstalk)
? element_text
# install pacman if it is not installed
if (!require("pacman")) install.packages("pacman")
# install packages if they are not installed
# and load them
p_load(
tidyverse,
GetDFPData2,
janitor,
here,
scales,
ggthemes
)
# store company name
cia_name <- "anima"
# get data
data_info <- get_info_companies()
data_info
# subset companies currently traded on B3
info_cleaned <-
data_info |>
clean_names() |>
rename(
name_social     = denom_social,
name_commercial = denom_comerc,
registro        = sit_reg,
code_cvm        = cd_cvm,
sector          = setor_ativ,
tipo            = tp_merc
) |>
mutate(across(c(registro, tipo, sector), str_to_lower)) |>
filter(registro == "ativo") |>
filter(tipo == "bolsa") |>
mutate(sector = str_remove_all(sector, ".*- "))
info_cleaned
# store company sector
cia_sector <-
info_cleaned |>
filter(str_detect(name_social, str_to_upper(cia_name))) |>
pull(sector)
cia_sector
# store company codes from the same economic sector of company chosen
cvm_codes <-
info_cleaned |>
filter(sector == cia_sector) |>
pull(code_cvm)
cvm_codes
# download data
list_bp  <-
get_dfp_data(
companies_cvm_codes = cvm_codes,
type_docs           = c("BPA","BPP"),
type_format         = "con",
clean_data          = TRUE,
use_memoise         = FALSE,
cache_folder        = "gdfpd2_cache"
)
list_bp
# convert list into data set
# provide some basic manipulations
data_bp <-
list_bp |>
bind_rows() |>
clean_names() |>
rename(
cnpj        = cnpj_cia,
date        = dt_refer,
name        = denom_cia,
escala      = escala_moeda,
value       = vl_conta,
index       = cd_conta,
description = ds_conta
) |>
mutate(across(c(escala, description), str_to_lower)) |>
mutate(value = case_when(
escala == "mil" ~ value * 1000,
TRUE            ~ value
))
data_bp
# store company complete name
cia_name_complete <-
data_bp |>
filter(str_detect(name, str_to_upper(cia_name))) |>
distinct(name) |>
pull(name)
# store variables
variables_chosen <- c(
"ativo circulante",
"passivo circulante",
"caixa e equivalentes de caixa",
"ativo realizável a longo prazo",
"passivo não circulante"
)
# store index
index_chosen <- "1.01.04"
index_chosen
# convert data to the wide format
data_wide <-
data_bp |>
filter(description %in% variables_chosen | index %in% index_chosen) |>
select(date, name, description, value) |>
mutate(description = case_when(
str_detect(description, "caixa")              ~ "caixa",
str_detect(description, "realizável")         ~ "at_realizavel",
str_detect(description, "não circulante")     ~ "pa_nao_circ",
str_detect(description, "ativo circulante")   ~ "at_circ",
str_detect(description, "passivo circulante") ~ "pa_circ",
TRUE                                          ~ description
)) |>
pivot_wider(names_from = description, values_from = value) |>
group_by(date) |>
mutate(n = n()) |>
ungroup()
data_wide
# store abbreviated variables
variables_abbreviated <-
data_wide |>
select(at_circ:pa_nao_circ) |>
names()
variables_abbreviated
# sum variables by year
data_total <-
data_wide |>
select(-name) |>
group_by(date) |>
mutate(across(any_of(variables_abbreviated), sum)) |>
ungroup() |>
mutate(name = str_to_upper("total"), .after = date) |>
distinct()
data_total
# store data set of company selected
# and sum of all companies from the same economic sector
data_subset <-
data_wide |>
bind_rows(data_total) |>
mutate(name = str_to_lower(name)) |>
filter(str_detect(name, cia_name) | name == "total") |>
mutate(name = str_to_upper(name))
data_subset
# calculate variables of interest
data_multiplos <-
data_subset |>
mutate(
liq_corrente = at_circ / pa_circ,
liq_seca     = (at_circ - estoques) / pa_circ,
liq_imediata = caixa / pa_circ,
liq_geral    = (at_circ + at_realizavel) / (pa_circ + pa_nao_circ)
) |>
select(date, name, starts_with("liq"), n)
data_multiplos
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name)))
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
select(-n)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
select(-n) |>
mutate(year = year(date))
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
select(-n) |>
mutate(year = year(date)) |>
pivot_longer(
cols      = starts_with("liq"),
names_to  = "ratio",
values_to = "value"
)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
select(-n) |>
mutate(year = year(date)) |>
pivot_longer(
cols      = starts_with("liq"),
names_to  = "ratio",
values_to = "value"
) |>
mutate(
ratio = case_when(
ratio == "liq_corrente" ~ "Current Ratio",
ratio == "liq_seca"     ~ "Quick Ratio",
ratio == "liq_imediata" ~ "Immediate Ratio",
ratio == "liq_geral"    ~ "General Ratio"
),
value = round(value, 3)
)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
select(-n) |>
mutate(year = year(date)) |>
pivot_longer(
cols      = starts_with("liq"),
names_to  = "ratio",
values_to = "value"
) |>
mutate(
ratio = case_when(
ratio == "liq_corrente" ~ "Current Ratio",
ratio == "liq_seca"     ~ "Quick Ratio",
ratio == "liq_imediata" ~ "Immediate Ratio",
ratio == "liq_geral"    ~ "General Ratio"
),
value = round(value, 1)
)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
select(-n) |>
mutate(year = year(date)) |>
pivot_longer(
cols      = starts_with("liq"),
names_to  = "ratio",
values_to = "value"
) |>
mutate(
ratio = case_when(
ratio == "liq_corrente" ~ "Current Ratio",
ratio == "liq_seca"     ~ "Quick Ratio",
ratio == "liq_imediata" ~ "Immediate Ratio",
ratio == "liq_geral"    ~ "General Ratio"
),
value = round(value, 1)
) |>
pivot_wider(names_from = year, values_from = value)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
mutate(year = year(date)) |>
select(-n)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
mutate(year = year(date)) |>
select(-n) |>
pivot_longer(
cols      = starts_with("liq"),
names_to  = "ratio",
values_to = "value"
)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
mutate(year = year(date)) |>
select(-n) |>
pivot_longer(
cols      = starts_with("liq"),
names_to  = "ratio",
values_to = "value"
) |>
mutate(
ratio = case_when(
ratio == "liq_corrente" ~ "Current Ratio",
ratio == "liq_seca"     ~ "Quick Ratio",
ratio == "liq_imediata" ~ "Immediate Ratio",
ratio == "liq_geral"    ~ "General Ratio"
),
value = round(value, 1)
)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
mutate(year = year(date)) |>
select(-n) |>
pivot_longer(
cols      = starts_with("liq"),
names_to  = "ratio",
values_to = "value"
) |>
mutate(
ratio = case_when(
ratio == "liq_corrente" ~ "Current Ratio",
ratio == "liq_seca"     ~ "Quick Ratio",
ratio == "liq_imediata" ~ "Immediate Ratio",
ratio == "liq_geral"    ~ "General Ratio"
),
value = round(value, 1)
) |>
select(ratio, year, value) |>
pivot_wider(names_from = year, values_from = value)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
mutate(year = year(date)) |>
select(-n) |>
pivot_longer(
cols      = starts_with("liq"),
names_to  = "ratio",
values_to = "value"
) |>
mutate(
ratio = case_when(
ratio == "liq_corrente" ~ "Current Ratio",
ratio == "liq_seca"     ~ "Quick Ratio",
ratio == "liq_imediata" ~ "Immediate Ratio",
ratio == "liq_geral"    ~ "General Ratio"
),
value = round(value, 1)
) |>
select(ratio, year, value) |>
pivot_wider(names_from = year, values_from = value) |>
rename(Ratio = ratio)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
mutate(year = year(date)) |>
select(-n) |>
pivot_longer(
cols      = starts_with("liq"),
names_to  = "ratio",
values_to = "value"
) |>
mutate(
ratio = case_when(
ratio == "liq_corrente" ~ "Current Ratio",
ratio == "liq_seca"     ~ "Quick Ratio",
ratio == "liq_imediata" ~ "Immediate Ratio",
ratio == "liq_geral"    ~ "General Ratio"
),
value = round(value, 2)
) |>
select(ratio, year, value) |>
pivot_wider(names_from = year, values_from = value) |>
rename(Ratio = ratio)
data_multiplos |>
filter(str_detect(name, str_to_upper(cia_name))) |>
mutate(year = year(date)) |>
select(-n) |>
pivot_longer(
cols      = starts_with("liq"),
names_to  = "ratio",
values_to = "value"
) |>
mutate(
ratio = case_when(
ratio == "liq_corrente" ~ "Current Ratio",
ratio == "liq_seca"     ~ "Quick Ratio",
ratio == "liq_imediata" ~ "Immediate Ratio",
ratio == "liq_geral"    ~ "General Ratio"
),
value = round(value, 1)
) |>
select(ratio, year, value) |>
pivot_wider(names_from = year, values_from = value) |>
rename(Ratio = ratio)
# Find all files larger than 10MB in your project
file_sizes <- file.info(list.files(".", recursive = TRUE, full.names = TRUE))
large_files <- file_sizes[file_sizes$size > 10*1024*1024, ]
print(large_files)
